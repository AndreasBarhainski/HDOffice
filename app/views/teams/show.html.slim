= render "teams/head", team: @team
.container
  = card :members, variant: :table
    .table
      .table__head
        .table__row
          .table__cell.table__cell--selection
          .table__cell = User.human_attribute_name :name
          .table__cell = User.human_attribute_name :email
      .table__body
        - @team.users.each do |user|
          a.table__row href=user_path(user)
            .table__cell.table__cell--selection
            .table__cell = user.name
            .table__cell = user.email
  - if @team.open_invoice.lines.any? || policy(@team).show_financial?
    = card :open_invoice, variant: :table
      .table
        .table__head
          .table__row
            .table__cell = Product.model_name.human
            .table__cell.table__cell--slim = InvoiceLine.human_attribute_name :quantity
            .table__cell.table__cell--slim = InvoiceLine.human_attribute_name :user
            .table__cell.table__cell--slim = InvoiceLine.human_attribute_name :price
            .table__cell.table__cell--slim = InvoiceLine.human_attribute_name :total
            .table__cell.table__cell--slim = InvoiceLine.human_attribute_name :purchased_at
        .table__body
          - @team.open_invoice.lines.each do |line|
            .table__row
              .table__cell = line.product.name
              .table__cell.table__cell--slim = line.quantity
              .table__cell.table__cell--slim = line.user&.name || "-"
              .table__cell.table__cell--slim = number_to_currency line.price
              .table__cell.table__cell--slim = number_to_currency line.total
              .table__cell.table__cell--slim = timeago_tag line.created_at
        .table_footer
          .table__row
            .table__cell
            .table__cell.table__cell--slim
            .table__cell.table__cell--slim
            .table__cell.table__cell--slim
            .table__cell.table__cell--slim = number_to_currency @team.open_invoice.total
            .table__cell.table__cell--slim
              - if policy(@team.open_invoice).update? && @team.open_invoice.total > 0
                = link_to t(".close_invoice"), invoice_path(@team.open_invoice), method: :patch, class: "button button--link"
  - @subscription ||= @team.subscriptions.build
  - modal id: :add_subscription, show: @subscription.errors.any?
    = card :add_subscription
      = awesome_form_for [@team, @subscription] do |f|
        = f.collection_select :product_id, Product.active, :id, :name
        = f.number_field :quantity, min: 1
        = f.datetime_field :next_renewal_at
        = f.submit_line
  - if policy(@team).show_financial?
    = card :subscriptions, variant: :table, actions: [add_if(:add_subscription, policy(@subscription).create?)]
      .table
        .table__head
          .table__row
            .table__cell = Product.model_name.human
            .table__cell.table__cell--slim = Subscription.human_attribute_name :quantity
            .table__cell.table__cell--slim = Subscription.human_attribute_name :interval
            .table__cell.table__cell--slim = Subscription.human_attribute_name :next_renewal_at
            .table__cell.table__cell--slim = Subscription.human_attribute_name :canceled_at
        .table__body
          - @team.subscriptions.select(&:persisted?).each do |subscription|
            .table__row
              .table__cell = subscription.product.name
              .table__cell.table__cell--slim = subscription.quantity
              .table__cell.table__cell--slim = subscription.interval
              .table__cell.table__cell--slim = l subscription.next_renewal_at.to_date, format: :short
              .table__cell.table__cell--slim
                - if subscription.canceled?
                  = l subscription.canceled_at, format: :short
  - @payment ||= @team.payments.new
  - modal id: :add_payment, show: @payment.errors.any?
    = card :add_payment
      = awesome_form_for [@team, @payment] do |f|
        = f.text_field :amount
        = f.text_field :subject
        = f.date_field :created_at
        = f.submit_line
  - if policy(@team).show_financial?
    = card :invoices, variant: :table, actions: [add_if(:add_payment, policy(Payment).create?)]
      .table
        .table__head
          .table__row
            .table__cell = Invoice.model_name.human
            .table__cell.table__cell--slim = Invoice.human_attribute_name :total
            .table__cell.table__cell--slim = Team.human_attribute_name :balance
            .table__cell.table__cell--slim = Invoice.human_attribute_name :invoiced_at
        .table__body
          - balance = 0
          - @team.invoices_and_payments.each do |doc|
            - balance += doc.accounting_amount
            .table__row
              - if doc.is_a?(Payment)
                .table__cell = doc.subject
                .table__cell.table__cell--slim
                  = number_to_accounting doc.accounting_amount
                .table__cell.table__cell--slim = number_to_accounting balance
                .table__cell.table__cell--slim = l doc.created_at.to_date, format: :short
              - else
                .table__cell = link_to doc.id, doc
                .table__cell.table__cell--slim
                  = number_to_accounting doc.accounting_amount
                  small = t ".price_plus_vat", price: number_to_currency(doc.total), vat: number_to_currency(doc.vat)
                .table__cell.table__cell--slim = number_to_accounting balance
                .table__cell.table__cell--slim = l doc.created_at.to_date, format: :short
        .table__foot
          .table__row
            .table__cell
            .table__cell.table__cell--slim
            .table__cell.table__cell--slim = number_to_accounting balance
            .table__cell.table__cell--slim
